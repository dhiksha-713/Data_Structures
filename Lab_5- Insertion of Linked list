#include <stdio.h>
#include<stdlib.h>

typedef struct node
{
    int data;
    struct node* link;
}Node;

Node* head=NULL;

void insert(int x){
    Node* point = (Node*) malloc(sizeof(Node));
    point -> data = x;
    point -> link = NULL;
    if(head!=NULL)
    {
        point -> link = head;
    }
    head = point;
}
void insert_n(int x,int n)
{
    Node* temp;
    Node* temp1=head;
    temp = (Node*) malloc(sizeof(Node));

    if(n==1)
    {
        temp->data = x;
        temp->link = head;
        head = temp;
    }
    else
    {
        temp->data = x;
        while(n-2!=0)
        {
            temp1 = temp1->link;
            n--;
        }
        temp->link = temp1->link;
        temp1->link = temp;
    }

}

void insert_end(int x)
{
    Node* temp;
    Node* temp1=head;
    temp = (Node*) malloc(sizeof(Node));


        temp->data = x;
        while(temp1->link!=NULL)
        {
            temp1 = temp1->link;
        }
        temp->link = temp1->link;
        temp1->link = temp;

}



void display()
{
    printf("LIST: ");
    Node* temp = head;
    while(temp != NULL )
    {
        printf("%d ",temp->data);
        temp = temp->link;
    }
    printf("\n");
}

int main()
{
    int x,n,choice;
    while(1){
        printf("1.INSERT  at specified position\n 2.INSERT at beginning\n 3.INSERT at END\n 4.DISPLAY\n 5.EXIT\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
                printf("Enter data to be inserted:\n");
                scanf("%d",&x);
                printf("Enter position:\n");
                scanf("%d",&n);
                insert_n(x,n);
                break;

            case 4:
                display();
                break;

            case 5:
                exit(1);

            case 2:
                printf("ENTER DATA TO BE INSERTED:\n");
                scanf("%d",&x);
                insert(x);
                break;

            case 3:
                printf("ENTER DATA TO BE INSERTED:\n");
                scanf("%d",&x);
                insert_end(x);
                break;

        }
    
    }
    return 0;
}
